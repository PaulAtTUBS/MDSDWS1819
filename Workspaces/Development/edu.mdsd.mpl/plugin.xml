<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>

<!--
-->

<plugin>

   <extension
         point="org.eclipse.emf.validation.constraintProviders">
      <category
            id="edu.mdsd.mpl.category"
            mandatory="true"
            name="MPL">
      </category>
      <constraintProvider
            cache="true"
            mode="Batch">
         <package
               namespaceUri="http://mdsd.edu/mpl/1.0">
         </package>
         <constraints
               categories="edu.mdsd.mpl.validation.category">
            <constraint
                  class="edu.mdsd.mpl.validation.UniqueVariableNamesConstraint"
                  id="edu.mdsd.mpl.validation.UniqueVariableNamesConstraint"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="UniqueVariableNamesConstraint"
                  severity="ERROR"
                  statusCode="1">
               <message>
                  Variable "{0}" has already been declared!
               </message>
               <target
                     class="Variable">
               </target>
            </constraint>
            <constraint
                  class="edu.mdsd.mpl.validation.InitialValueInVarDecExistsConstraint"
                  id="edu.mdsd.mpl.validation.InitialValueInVarDecExistsConstraint"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="InitialValueInVarDecExistsConstraint"
                  severity="ERROR"
                  statusCode="1">
               <message>
                  Variable &quot;{0}&quot; has not been declared!
               </message>
               <target
                     class="VariableDeclaration">
               </target>
            </constraint>
            <constraint
                  class="edu.mdsd.mpl.validation.WellDeclaredForLoop"
                  id="edu.mdsd.mpl.WellDeclaredForLoop"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="WellDeclaredForLoop"
                  severity="ERROR"
                  statusCode="1">
               <message>
                  The first index has to be{0} than the second one, when using &quot;{1}&quot;!
               </message>
               <target
                     class="ForLoop">
               </target>
            </constraint>
            <constraint
                  class="edu.mdsd.mpl.validation.UniqueOperationNames"
                  id="edu.mdsd.mpl.UniqueOperationNames"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="UniqueOperationNames"
                  severity="ERROR"
                  statusCode="1">
               <message>
                  An operation with the name "{0}" already exists.
               </message>
               <target
                     class="Operation">
               </target>
            </constraint>
            <constraint
                  class="edu.mdsd.mpl.validation.ValidOperationCall"
                  id="edu.mdsd.mpl.ValidOperationCall"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="ValidOperationCall"
                  severity="ERROR"
                  statusCode="1">
               <message>
                  {0}
               </message>
               <target
                     class="OperationCall">
               </target>
            </constraint>
            <constraint
                  class="edu.mdsd.mpl.validation.ValidReturnStatement"
                  id="edu.mdsd.mpl.ValidReturnStatement"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="ValidReturnStatement"
                  severity="ERROR"
                  statusCode="1">
               <message>
                  {0}
               </message>
               <target
                     class="ReturnStatement">
               </target>
            </constraint>
            <constraint
                  class="edu.mdsd.mpl.validation.OnlyFunctionCallsInsideExpressions"
                  id="edu.mdsd.mpl.OnlyFunctionCallsInsideExpressions"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="OnlyFunctionCallsInsideExpressions"
                  severity="ERROR"
                  statusCode="1">
               <message>
                  Only Function calls are permitted inside nested expressions.
               </message>
               <target
                     class="OperationCall">
               </target>
            </constraint>
            <constraint
                  class="edu.mdsd.mpl.validation.UnusedExpressionResult"
                  id="edu.mdsd.mpl.UnusedExpressionResult"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="UnusedExpressionResult"
                  severity="WARNING"
                  statusCode="1">
               <message>
                  Expression result is unused.
               </message>
               <target
                     class="ExpressionStatement">
               </target>
            </constraint>
            <constraint
                  class="edu.mdsd.mpl.validation.UnreachableCodeAfterReturnInSameBlock"
                  id="edu.mdsd.mpl.UnreachableCodeAfterReturnInSameBlock"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="UnreachableCodeAfterReturnInSameBlock"
                  severity="WARNING"
                  statusCode="1">
               <message>
                  unreachable code
               </message>
               <target
                     class="Statement">
               </target>
            </constraint>
            <constraint
                  class="edu.mdsd.mpl.validation.FunctionReturnsOnEveryBranch"
                  id="edu.mdsd.mpl.FunctionReturnsOnEveryBranch"
                  isEnabledByDefault="true"
                  lang="Java"
                  mode="Batch"
                  name="FunctionReturnsOnEveryBranch"
                  severity="ERROR"
                  statusCode="1">
               <message>
                  missing return statement
               </message>
               <target
                     class="Function">
               </target>
            </constraint>
         </constraints>
      </constraintProvider>
   </extension>

   <extension point="org.eclipse.emf.ecore.generated_package">
      <!-- @generated MPL -->
      <package
            uri="http://mdsd.edu/mpl/1.0"
            class="edu.mdsd.mpl.MPLPackage"
            genModel="model/MPL.genmodel"/>
   </extension>

</plugin>
